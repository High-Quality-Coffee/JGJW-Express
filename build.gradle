plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

bootJar.enabled = false // 루트 프로젝트의 bootJar 비활성화

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

allprojects {
    group = 'com.zgzg'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

subprojects { // 모든 하위 모듈에 이 설정을 적용함
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    bootJar.enabled = true
    jar.enabled = false

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:2024.0.0"
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation("io.github.cdimascio:java-dotenv:5.2.2") // 환경변수 파일 읽기 위한 라이브러리 추가

        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    }


    tasks.withType(Jar).configureEach {
        enabled = false
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
