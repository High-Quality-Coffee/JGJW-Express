plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

bootJar.enabled = false // 루트 프로젝트에서는 bootJar 비활성화

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

ext {
    springCloudVersion = "2024.0.0"
    springDocVersion = "2.4.0"  // 모든 하위 모듈에 통일된 springdoc 버전 적용
}

allprojects {
    group = 'com.zgzg'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

dependencies {
    // 루트 프로젝트에서는 필요한 경우 최소한의 의존성만 포함
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    // 하위 모듈은 실행 가능한 아티팩트를 생성하도록 설정
    bootJar.enabled = true
    jar.enabled = false

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation("io.github.cdimascio:java-dotenv:5.2.2")
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    tasks.withType(Jar).configureEach {
        enabled = false
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
